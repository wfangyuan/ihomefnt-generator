package ${package}.controller.${moduleName};

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.apache.commons.collections4.CollectionUtils;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.Resource;

/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Api(value = "${className}管理相关接口}")
@Slf4j
@RestController
@RequestMapping("/${classname}/")
public class ${className}Controller {

    @Resource
    private ${className}Service ${classname}Service;

    @ApiOperation(value = "添加")
    @PostMapping(value = "/save")
    public ResponseVo<Boolean> save(@RequestBody @Valid ${className}SaveCmd saveCmd) {
            ${classname}Service.save(saveCmd）;
        return ResponseVo.buildSuccessInstance(true);
    }

    @ApiOperation(value = "编辑")
    @PostMapping(value = "/update")
    public ResponseVo<Boolean> update(@RequestBody @Valid ${className}UpdateCmd updateCmd) {
            ${classname}Service.update(updateCmd);
        return ResponseVo.buildSuccessInstance(true);
    }

    @ApiOperation(value = "删除")
    @PostMapping(value = "/delete")
    public ResponseVo<Boolean> delete(@RequestBody @Valid ${className}ByIdCmd deleteCmd) {
            ${classname}Service.delete(deleteCmd);
        return ResponseVo.buildSuccessInstance(true);
    }


    @ApiOperation(value = "查询详情")
    @PostMapping(value = "/detail")
    public ResponseVo<${className}DetailRes> detail(@RequestBody @Valid ${className}DetailQry detailQry) {
            ${className}DetailResponse ${classname}DetailResponse = ${classname}Service.detail(detailQry);
        if (null == ${classname}DetailResponse) {
            ResponseVo.buildSuccessInstance(null);
        }
        return ResponseVo.buildSuccessInstance(${classname}DetailResponse);

    }

    @ApiOperation(value = "查询列表")
    @PostMapping(value = "/page")
    public ResponseVo<PageModel<${className}DetailRes>> page(@RequestBody ${className}PageQry pageQry) {
        return ResponseVo.buildSuccessInstance(${classname}Service.page(pageQry));
    }

}
